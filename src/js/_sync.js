/**
 * Synchronizes the value of any two input fields.
 *
 * @param  inputA   An input DOM node to be synced with inputB.
 * @param  inputB   An input DOM node to be synced with inputA.
 * @return An object with properties that represent each input and their coresponding event handler.
 */
const syncInput = (inputA, inputB) => {
  let syncHandle = () => {
    inputB.value = inputA.value;
  };

  let swapValues = () => {
    inputA.value = inputB.value;
  };

  inputA.addEventListener('keyup', syncHandle);
  inputB.addEventListener('keyup', swapValues);

  return {
    a: { node: inputA, fn: syncHandle },
    b: { node: inputB, fn: syncHandle }
  };
};

/**
 * Removes event listeners generated by the syncInput function.
 *
 * @param   inputs   An object with each input DOM node & coresponding event handlers.
 * @return  inputs   An object of the same inputs with the event listeners removed.
 */
const removeSync = (inputs) => {
  inputs.a.node.removeEventListener('keyup', inputs.a.fn);
  inputs.b.node.removeEventListener('keyup', inputs.b.fn);
  return {
    a: inputs.a.node.value,
    b: inputs.b.node.value
  };
};

/**
 * Saves the values of each input field and appends it to the 'savedInputs' area in the DOM.
 *
 * @param inputs   An object with each input DOM node.
 */
const saveSync = (inputs, id) => {
  var left  = inputs.a,
      right = inputs.b;

  document.getElementById(id).innerHTML += `${left} synced with ${right}`;
};
